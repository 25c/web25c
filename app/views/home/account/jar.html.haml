= content_for(:js) do
  = javascript_include_tag "submit-payment"
  :javascript
    window.hasCard = Boolean(#{ !@card_masked_number.blank? });
    window.hasResult = Boolean(#{ !@result.nil? });
    window.setRefillUrl = '#{ j home_set_refill_path }';
    window.useExistingText = '#{ j t('.use_existing') }';
    window.useDifferentText = '#{ j t('.use_different') }';

.row
  .span12
    %h2.page-header= t('.title')
.row
  .span12
    .lead
      %div= t('.contents')
      %div
        %b= @user.balance.to_s() + ' ' + t('application.25c_units')
        %span ($#{"%.2f" % (@user.balance / 4)})
      %p.payout-link-container
    %a= link_to t('.request_payout'), home_payout_path, :class => 'btn'   
%hr
.row
  .span12
    %h3#refill-title= t('.refill_title')
    
    %label{:for => "refill-amount"}= t('.refill_amount')
    %select#refill-amount
      - ['20','40','60','80','200','400'].each do |a|
        - if a == '80'
          %option{:value => "#{a}",
            :selected => "selected"} #{a.to_s + ' ' + t('application.25c_units')} ($#{"%.2f" % (Integer(a)/4)})
        - else
          %option{:value => "#{a}"} #{a.to_s + ' ' + t('application.25c_units')} ($#{"%.2f" % (Integer(a)/4)})
    %div.checkbox-container
      %input.checkbox#auto-refill-checkbox{:type => 'checkbox', 
        :checked => @user.auto_refill ? "true" : nil,
        :name => 'auto_refill'} 
        = t('.auto_refill')
    -if !@card_masked_number.blank?
      #existing-card
        %p
          = t('.card_on_file')
          %b
            = @card_masked_number
        %form{:action => home_confirm_payment_url, :method => 'post' }
          %input.transaction-amount{:type => 'hidden', :name => 'transaction[amount]'}
          %input.payment-type{:type => 'hidden', :name => 'payment_type', :value => 'existing'}
          %input.btn{:type => 'submit', :value => 'Submit Payment'}
      
      #toggle-card-container
        .btn#toggle-card-button= t('.use_different')

    #new-card.hide
      -if @result
        .errors
          %h4 #{@result.errors.size} error(s):
          - @result.errors.each do |error|
            %p.errors #{error.message}
      = form_for :transaction,
          :params => @result && @result.params[:transaction],
          :errors => @result && @result.errors.for(:transaction),
          :builder => ApplicationHelper::BraintreeFormBuilder,
          :url => Braintree::TransparentRedirect.url,
          :html => {:id => "transaction-form", :autocomplete => "off"} do |f|
        %label{:for => "cardholder_name"}= t('.card_name')
        %input{:type => 'text', :size => 40, :name => 'transaction[credit_card][cardholder_name]'}
        %div.pull-left
          %label{:for => "number"}= t('.card_number')
          %input#card-number{:type => 'text', :size=>40, 
            :name => 'transaction[credit_card][number]'}
        %label{:for => "CVV"}= t('.card_cvv')
        %input#card-CVV{:type => 'text', :size => 40, :name => 'transaction[credit_card][cvv]'}
        %label{:for => "expiration_date"}= t('.expiration_date')
        %select#card-expiration-month{:name => 'transaction[credit_card][expiration_month]'}
          %option{:selected => "selected", :disabled => "disabled", :value => ""}
            = t('.select_month')
          - (1..12).each do |month|
            %option{:value => "#{month}"} #{Date::MONTHNAMES[month]}
        %select#card-expiration-year{:name => 'transaction[credit_card][expiration_year]'}
          %option{:selected => "selected", :disabled => "disabled", :value => ""}
            = t('.select_year')
          - (Date.today.year..20.years.from_now.year).each do |year|
            %option{:value => "#{year.to_s()[2,2]}"} #{year.to_s()}
        = hidden_field_tag :tr_data, @bt_data
        %div.checkbox-container
          %input.checkbox{:type => 'checkbox', :checked => 'true', :value => 'true',
            :name => 'transaction[options][store_in_vault_on_success]'}
            =t('.remember_card')
        %input.transaction-amount{:type => 'hidden', :name => 'transaction[amount]'}
        %input.payment-type{:type => 'hidden', :name => 'payment_type', :value => 'new'}
        %input.btn{:type => 'submit', :value => 'Submit Payment'}